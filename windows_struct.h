#pragma once
#include <Windows.h>

typedef struct _FILE_FULL_EA_INFORMATION {
	ULONG  NextEntryOffset;
	UCHAR  Flags;
	UCHAR  EaNameLength;
	USHORT EaValueLength;
	CHAR   EaName[1];
} FILE_FULL_EA_INFORMATION, * PFILE_FULL_EA_INFORMATION;
#define ALIGN(x,v) ((x + v - 1)&((-v)&0xffffffff))
typedef struct _FILE_GET_EA_INFORMATION {
	ULONG NextEntryOffset;
	UCHAR EaNameLength;
	CHAR  EaName[1];
} FILE_GET_EA_INFORMATION, * PFILE_GET_EA_INFORMATION;


//#include <Windows.h>
//#include <subauth.h>
////https://processhacker.sourceforge.io/doc/ntbasic_8h_source.html#l00034
////https://github.com/mrexodia/TitanHide/blob/master/TitanHide/ntdll.cpp
//
////#define FILE_OPEN 0x00000001
////#define FILE_SYNCHRONOUS_IO_NONALERT 0x00000020
////#define FILE_OVERWRITE_IF 0x00000005
////#define FILE_RANDOM_ACCESS 0x00000800
////#define FILE_NON_DIRECTORY_FILE 0x00000040
////#define OBJ_CASE_INSENSITIVE 0x00000040
//
//#define InitializeObjectAttributes(p, n, a, r, s) { \
//(p)->Length = sizeof(OBJECT_ATTRIBUTES); \
//(p)->RootDirectory = r; \
//(p)->Attributes = a; \
//(p)->ObjectName = n; \
//(p)->SecurityDescriptor = s; \
//(p)->SecurityQualityOfService = NULL; \
//}
//
//
//FORCEINLINE VOID RtlInitUnicodeString(
//    _Out_ UNICODE_STRING* DestinationString,
//    _In_opt_ PWSTR SourceString
//)
//{
//    if (SourceString)
//        DestinationString->MaximumLength = (DestinationString->Length = (USHORT)(wcslen(SourceString) * sizeof(WCHAR))) + sizeof(WCHAR);
//    else
//        DestinationString->MaximumLength = DestinationString->Length = 0;
//
//    DestinationString->Buffer = SourceString;
//}
//
//typedef _Success_(return >= 0) LONG NTSTATUS;
//typedef NTSTATUS* PNTSTATUS;
//
//
//
//typedef struct _IO_STATUS_BLOCK
//{
//    union
//    {
//        LONG Status;
//        PVOID Pointer;
//    };
//    ULONG Information;
//} IO_STATUS_BLOCK, * PIO_STATUS_BLOCK;
////
////typedef struct _OBJECT_ATTRIBUTES
////{
////    ULONG Length;
////    HANDLE RootDirectory;
////    PUNICODE_STRING ObjectName;
////    ULONG Attributes;
////    PVOID SecurityDescriptor; // PSECURITY_DESCRIPTOR;
////    PVOID SecurityQualityOfService; // PSECURITY_QUALITY_OF_SERVICE
////} OBJECT_ATTRIBUTES, * POBJECT_ATTRIBUTES;
//
//#define NT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)